using System.Text.Json.Serialization;
using System.Text.Json;

using Analyzer.Drivers.Cape.Reporting.CapeJsonClasses;


namespace Analyzer.Drivers.Cape.Reporting;

public class ApiCall
{

    public ApiCall(CapeApiCall capeApiCall)
    {
        this.Category = capeApiCall.Category;
        this.Name = capeApiCall.Name;

        if (capeApiCall.Status)
            this.Status = 1;
        else this.Status = 0;

        this.ReturnValue = capeApiCall.ReturnValue;
        this.Time = capeApiCall.Time;
        this.ThreadId = int.Parse(capeApiCall.ThreadId);


        foreach (var dict in capeApiCall.Args)
        {
            //Args is a list of dictionaries
            this.Arguments.Add(dict["name"].ToString(), dict["value"]);
        }


    }

    public string? Category
    {
        get;
        set;
    }

    [JsonPropertyName("api")]
    public string Name
    {
        get;
        set;
    } = string.Empty;

    public uint Status
    {
        get;
        set;
    }

    public JsonElement ReturnValue
    {
        get;
        set;
    }

    /**
    public double Time
    {
        get;
        set;
    }*/
    public string Time { get; set; }

    [JsonPropertyName("tid")]
    public int ThreadId
    {
        get;
        set;
    }

    public Dictionary<string, JsonElement> Arguments
    {
        get;
        set;
    } = new();

    /// <inheritdoc />
    public override string ToString() => Name;

    public void getProperties()
    {
        Console.WriteLine("Timestamp: " + Time.ToString());
        Console.WriteLine("tid: " + ThreadId);
        Console.WriteLine("category: " + Category);
        Console.WriteLine("status: " + Status);
        Console.WriteLine("ret val: " + ReturnValue.ToString());
        Console.WriteLine("name: " + Name.ToString());

        foreach (KeyValuePair<string, JsonElement> kv in Arguments)
        {
            Console.WriteLine(" k: " + kv.Key + " v: " + kv.Value.ToString());
        }


        //Console.WriteLine(": " + this..toString());
        Console.WriteLine();
    }
}
