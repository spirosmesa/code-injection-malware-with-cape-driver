//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Analyzer.ModelParser.Internal {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="BehaviorNetParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IBehaviorNetListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="BehaviorNetParser.behavior"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBehavior([NotNull] BehaviorNetParser.BehaviorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BehaviorNetParser.behavior"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBehavior([NotNull] BehaviorNetParser.BehaviorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BehaviorNetParser.element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElement([NotNull] BehaviorNetParser.ElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BehaviorNetParser.element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElement([NotNull] BehaviorNetParser.ElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BehaviorNetParser.place"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlace([NotNull] BehaviorNetParser.PlaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BehaviorNetParser.place"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlace([NotNull] BehaviorNetParser.PlaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BehaviorNetParser.transition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransition([NotNull] BehaviorNetParser.TransitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BehaviorNetParser.transition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransition([NotNull] BehaviorNetParser.TransitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BehaviorNetParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] BehaviorNetParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BehaviorNetParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] BehaviorNetParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>idArgument</c>
	/// labeled alternative in <see cref="BehaviorNetParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdArgument([NotNull] BehaviorNetParser.IdArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>idArgument</c>
	/// labeled alternative in <see cref="BehaviorNetParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdArgument([NotNull] BehaviorNetParser.IdArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>discardArgument</c>
	/// labeled alternative in <see cref="BehaviorNetParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDiscardArgument([NotNull] BehaviorNetParser.DiscardArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>discardArgument</c>
	/// labeled alternative in <see cref="BehaviorNetParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDiscardArgument([NotNull] BehaviorNetParser.DiscardArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BehaviorNetParser.returnClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnClause([NotNull] BehaviorNetParser.ReturnClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BehaviorNetParser.returnClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnClause([NotNull] BehaviorNetParser.ReturnClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BehaviorNetParser.inClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInClause([NotNull] BehaviorNetParser.InClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BehaviorNetParser.inClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInClause([NotNull] BehaviorNetParser.InClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BehaviorNetParser.processClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcessClause([NotNull] BehaviorNetParser.ProcessClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BehaviorNetParser.processClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcessClause([NotNull] BehaviorNetParser.ProcessClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BehaviorNetParser.threadClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThreadClause([NotNull] BehaviorNetParser.ThreadClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BehaviorNetParser.threadClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThreadClause([NotNull] BehaviorNetParser.ThreadClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BehaviorNetParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhereClause([NotNull] BehaviorNetParser.WhereClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BehaviorNetParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhereClause([NotNull] BehaviorNetParser.WhereClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExpression([NotNull] BehaviorNetParser.BoolExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExpression([NotNull] BehaviorNetParser.BoolExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>additiveExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpression([NotNull] BehaviorNetParser.AdditiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>additiveExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpression([NotNull] BehaviorNetParser.AdditiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>numberExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberExpression([NotNull] BehaviorNetParser.NumberExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>numberExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberExpression([NotNull] BehaviorNetParser.NumberExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>relationalExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalExpression([NotNull] BehaviorNetParser.RelationalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>relationalExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalExpression([NotNull] BehaviorNetParser.RelationalExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierExpression([NotNull] BehaviorNetParser.IdentifierExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierExpression([NotNull] BehaviorNetParser.IdentifierExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parensExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParensExpression([NotNull] BehaviorNetParser.ParensExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parensExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParensExpression([NotNull] BehaviorNetParser.ParensExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotExpression([NotNull] BehaviorNetParser.NotExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotExpression([NotNull] BehaviorNetParser.NotExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicativeExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeExpression([NotNull] BehaviorNetParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicativeExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeExpression([NotNull] BehaviorNetParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>orExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrExpression([NotNull] BehaviorNetParser.OrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>orExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrExpression([NotNull] BehaviorNetParser.OrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>inExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInExpression([NotNull] BehaviorNetParser.InExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>inExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInExpression([NotNull] BehaviorNetParser.InExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>andExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpression([NotNull] BehaviorNetParser.AndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>andExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpression([NotNull] BehaviorNetParser.AndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stringExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringExpression([NotNull] BehaviorNetParser.StringExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stringExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringExpression([NotNull] BehaviorNetParser.StringExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>rangeExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRangeExpression([NotNull] BehaviorNetParser.RangeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rangeExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRangeExpression([NotNull] BehaviorNetParser.RangeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>bitwiseExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitwiseExpression([NotNull] BehaviorNetParser.BitwiseExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>bitwiseExpression</c>
	/// labeled alternative in <see cref="BehaviorNetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitwiseExpression([NotNull] BehaviorNetParser.BitwiseExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BehaviorNetParser.edgeChain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEdgeChain([NotNull] BehaviorNetParser.EdgeChainContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BehaviorNetParser.edgeChain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEdgeChain([NotNull] BehaviorNetParser.EdgeChainContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BehaviorNetParser.idList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdList([NotNull] BehaviorNetParser.IdListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BehaviorNetParser.idList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdList([NotNull] BehaviorNetParser.IdListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BehaviorNetParser.qualifiedName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifiedName([NotNull] BehaviorNetParser.QualifiedNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BehaviorNetParser.qualifiedName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifiedName([NotNull] BehaviorNetParser.QualifiedNameContext context);
}
} // namespace Analyzer.ModelParser.Internal
